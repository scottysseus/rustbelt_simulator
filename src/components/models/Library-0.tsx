/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Plane169: THREE.Mesh
    Plane169_1: THREE.Mesh
    Plane169_2: THREE.Mesh
    Plane169_3: THREE.Mesh
    Plane169_4: THREE.Mesh
  }
  materials: {
    Dirt: THREE.MeshStandardMaterial
    ['Rusty::Library::Brick']: THREE.MeshStandardMaterial
    ['Rusty::Library::Window']: THREE.MeshStandardMaterial
    ['Rust::Library::Letters']: THREE.MeshStandardMaterial
    ['Rusty::Library::Board']: THREE.MeshStandardMaterial
  }
}

export default function Model({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/models/library-0.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <group position={[1, 0, 0]}>
        <mesh castShadow receiveShadow geometry={nodes.Plane169.geometry} material={materials.Dirt} />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane169_1.geometry}
          material={materials['Rusty::Library::Brick']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane169_2.geometry}
          material={materials['Rusty::Library::Window']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane169_3.geometry}
          material={materials['Rust::Library::Letters']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane169_4.geometry}
          material={materials['Rusty::Library::Board']}
        />
      </group>
    </group>
  )
}

useGLTF.preload('/models/library-0.glb')
