/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Plane101: THREE.Mesh
    Plane101_1: THREE.Mesh
    Plane101_2: THREE.Mesh
    Plane101_3: THREE.Mesh
    Plane101_4: THREE.Mesh
    Plane101_5: THREE.Mesh
  }
  materials: {
    Dirt: THREE.MeshStandardMaterial
    ['FoodMart::Walls']: THREE.MeshStandardMaterial
    ['FoodMart::Door']: THREE.MeshStandardMaterial
    ['FoodMart::Steel']: THREE.MeshStandardMaterial
    ['FoodMart::DoorFrame']: THREE.MeshStandardMaterial
    ['Material.004']: THREE.MeshStandardMaterial
  }
}

export default function Model({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/models/shop-super.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <group position={[0.5, 0.05, -0.5]}>
        <mesh castShadow receiveShadow geometry={nodes.Plane101.geometry} material={materials.Dirt} />
        <mesh castShadow receiveShadow geometry={nodes.Plane101_1.geometry} material={materials['FoodMart::Walls']} />
        <mesh castShadow receiveShadow geometry={nodes.Plane101_2.geometry} material={materials['FoodMart::Door']} />
        <mesh castShadow receiveShadow geometry={nodes.Plane101_3.geometry} material={materials['FoodMart::Steel']} />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane101_4.geometry}
          material={materials['FoodMart::DoorFrame']}
        />
        <mesh castShadow receiveShadow geometry={nodes.Plane101_5.geometry} material={materials['Material.004']} />
      </group>
    </group>
  )
}

useGLTF.preload('/models/shop-super.glb')
