/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    ['Plane180']: THREE.Mesh
    ['Plane180_1']: THREE.Mesh
    ['Plane180_2']: THREE.Mesh
  }
  materials: {
    Dirt: THREE.MeshStandardMaterial
    ['Rust::PowerPlant::SmokeStack']: THREE.MeshStandardMaterial
    ['Rust::PowerPlant::Rust']: THREE.MeshStandardMaterial
  }
}

export default function Model ({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('models/energy-coal.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <group position={[1, 0, 0]}>
        <mesh castShadow receiveShadow geometry={nodes.Plane180.geometry} material={materials.Dirt} />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane180_1.geometry}
          material={materials['Rust::PowerPlant::SmokeStack']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane180_2.geometry}
          material={materials['Rust::PowerPlant::Rust']}
        />
      </group>
    </group>
  )
}

useGLTF.preload('models/energy-coal.glb')
