/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    ['Plane194']: THREE.Mesh
    ['Plane194_1']: THREE.Mesh
    ['Plane194_2']: THREE.Mesh
    ['Plane194_3']: THREE.Mesh
    ['Plane194_4']: THREE.Mesh
    ['Plane194_5']: THREE.Mesh
  }
  materials: {
    Dirt: THREE.MeshStandardMaterial
    Grass: THREE.MeshStandardMaterial
    ['Library Walls']: THREE.MeshStandardMaterial
    ['Library Windows']: THREE.MeshStandardMaterial
    ['Library Door']: THREE.MeshStandardMaterial
    ['Library Text']: THREE.MeshStandardMaterial
  }
}

export default function Model ({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('models/library-1.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <group position={[1, 0, 0]}>
        <mesh castShadow receiveShadow geometry={nodes.Plane194.geometry} material={materials.Dirt} />
        <mesh castShadow receiveShadow geometry={nodes.Plane194_1.geometry} material={materials.Grass} />
        <mesh castShadow receiveShadow geometry={nodes.Plane194_2.geometry} material={materials['Library Walls']} />
        <mesh castShadow receiveShadow geometry={nodes.Plane194_3.geometry} material={materials['Library Windows']} />
        <mesh castShadow receiveShadow geometry={nodes.Plane194_4.geometry} material={materials['Library Door']} />
        <mesh castShadow receiveShadow geometry={nodes.Plane194_5.geometry} material={materials['Library Text']} />
      </group>
    </group>
  )
}

useGLTF.preload('models/library-1.glb')
