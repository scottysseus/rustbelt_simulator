/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    ['gas-0_1']: THREE.Mesh
    ['gas-0_2']: THREE.Mesh
    ['gas-0_3']: THREE.Mesh
    ['gas-0_4']: THREE.Mesh
    ['gas-0_5']: THREE.Mesh
    ['gas-0_6']: THREE.Mesh
    ['gas-0_7']: THREE.Mesh
    ['gas-0_8']: THREE.Mesh
  }
  materials: {
    Dirt: THREE.MeshStandardMaterial
    Green: THREE.MeshStandardMaterial
    Rust: THREE.MeshStandardMaterial
    ['Light Gray']: THREE.MeshStandardMaterial
    Gray: THREE.MeshStandardMaterial
    Blue: THREE.MeshStandardMaterial
    ['Material.012']: THREE.MeshStandardMaterial
    ['Gas Blue']: THREE.MeshStandardMaterial
  }
}

export default function Model({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/models/gas-0.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <group position={[1, 0, 0]}>
        <mesh castShadow receiveShadow geometry={nodes['gas-0_1'].geometry} material={materials.Dirt} />
        <mesh castShadow receiveShadow geometry={nodes['gas-0_2'].geometry} material={materials.Green} />
        <mesh castShadow receiveShadow geometry={nodes['gas-0_3'].geometry} material={materials.Rust} />
        <mesh castShadow receiveShadow geometry={nodes['gas-0_4'].geometry} material={materials['Light Gray']} />
        <mesh castShadow receiveShadow geometry={nodes['gas-0_5'].geometry} material={materials.Gray} />
        <mesh castShadow receiveShadow geometry={nodes['gas-0_6'].geometry} material={materials.Blue} />
        <mesh castShadow receiveShadow geometry={nodes['gas-0_7'].geometry} material={materials['Material.012']} />
        <mesh castShadow receiveShadow geometry={nodes['gas-0_8'].geometry} material={materials['Gas Blue']} />
      </group>
    </group>
  )
}

useGLTF.preload('/models/gas-0.glb')
