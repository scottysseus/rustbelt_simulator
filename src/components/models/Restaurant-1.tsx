/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Plane113: THREE.Mesh
    Plane113_1: THREE.Mesh
    Plane113_2: THREE.Mesh
    Plane113_3: THREE.Mesh
    Plane113_4: THREE.Mesh
    Plane113_5: THREE.Mesh
  }
  materials: {
    Dirt: THREE.MeshStandardMaterial
    Nice: THREE.MeshStandardMaterial
    ['Diner::Concrete']: THREE.MeshStandardMaterial
    ['Diner::Metal']: THREE.MeshStandardMaterial
    ['Diner::Window']: THREE.MeshStandardMaterial
    ['Material.001']: THREE.MeshStandardMaterial
  }
}

export default function Model({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/models/restaurant-1.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <group position={[1, 0, 0]}>
        <mesh castShadow receiveShadow geometry={nodes.Plane113.geometry} material={materials.Dirt} />
        <mesh castShadow receiveShadow geometry={nodes.Plane113_1.geometry} material={materials.Nice} />
        <mesh castShadow receiveShadow geometry={nodes.Plane113_2.geometry} material={materials['Diner::Concrete']} />
        <mesh castShadow receiveShadow geometry={nodes.Plane113_3.geometry} material={materials['Diner::Metal']} />
        <mesh castShadow receiveShadow geometry={nodes.Plane113_4.geometry} material={materials['Diner::Window']} />
        <mesh castShadow receiveShadow geometry={nodes.Plane113_5.geometry} material={materials['Material.001']} />
      </group>
    </group>
  )
}

useGLTF.preload('/models/restaurant-1.glb')
