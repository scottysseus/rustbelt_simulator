/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    ['road-straight_1']: THREE.Mesh
    ['road-straight_2']: THREE.Mesh
    ['road-straight_3']: THREE.Mesh
  }
  materials: {
    Dirt: THREE.MeshStandardMaterial
    ['Road::Tar']: THREE.MeshStandardMaterial
    ['Road::Stripe']: THREE.MeshStandardMaterial
  }
}

export default function Model ({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/models/road-straight.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <group position={[1, 0, 0]}>
        <mesh castShadow receiveShadow geometry={nodes['road-straight_1'].geometry} material={materials.Dirt} />
        <mesh castShadow receiveShadow geometry={nodes['road-straight_2'].geometry} material={materials['Road::Tar']} />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['road-straight_3'].geometry}
          material={materials['Road::Stripe']}
        />
      </group>
    </group>
  )
}

useGLTF.preload('/models/road-straight.glb')
