/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    ['Plane181']: THREE.Mesh
    ['Plane181_1']: THREE.Mesh
    ['Plane181_2']: THREE.Mesh
    ['Plane181_3']: THREE.Mesh
  }
  materials: {
    Grass: THREE.MeshStandardMaterial
    Dirt: THREE.MeshStandardMaterial
    Windmill: THREE.MeshStandardMaterial
    ['Windmill::Tip']: THREE.MeshStandardMaterial
  }
}

export default function Model ({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/models/energy-wind.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <group position={[1, 0, 0]}>
        <mesh castShadow receiveShadow geometry={nodes.Plane181.geometry} material={materials.Grass} />
        <mesh castShadow receiveShadow geometry={nodes.Plane181_1.geometry} material={materials.Dirt} />
        <mesh castShadow receiveShadow geometry={nodes.Plane181_2.geometry} material={materials.Windmill} />
        <mesh castShadow receiveShadow geometry={nodes.Plane181_3.geometry} material={materials['Windmill::Tip']} />
      </group>
    </group>
  )
}

useGLTF.preload('/models/energy-wind.glb')
